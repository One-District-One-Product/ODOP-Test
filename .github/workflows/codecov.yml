name: code coverage

on:
  push:
    branches:
      - main  # Replace with the source branch you want to trigger the workflow
permissions: write-all

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'jscoverage']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
          sarif-file: /home/runner/work/_temp/codeql_databases/javascript.zip
      - name: Upload CodeQL SARIF report
        uses: actions/upload-artifact@v2
        with:
          name: codeql-report
          path: /home/runner/work/_temp/codeql_databases/javascript.zip
        
  wapiti_scan:
    name: Wapiti DAST Scan
    runs-on: ubuntu-latest
    needs: [analyze]
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Wapiti
        run: |
          sudo apt-get update
          sudo apt-get install -y wapiti
      - name: Run Wapiti scan
        run: |
          wapiti -u http://xyz-test37-362734683.us-east-1.elb.amazonaws.com/ -o wapiti-report.html
      - name: Upload Wapiti HTML report
        uses: actions/upload-artifact@v2
        with:
          name: wapiti-report
          path: wapiti-report.html
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
